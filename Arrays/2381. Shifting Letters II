class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        if(s==null || s.length()==0) return "";
        int n=shifts.length; // length of query;
        int m=s.length(); // length of string

        int[] value=new int[m+1]; // declaring int to know the overall dir of an element;
        for(int i=0;i<n ;i++){
            int stp=shifts[i][0];
            int edp=shifts[i][1];
            int dir=shifts[i][2];
            int increment = dir==1?1:-1;
            value[stp]+=increment;
            if (edp + 1 < m) {
                value[edp + 1] -= increment;
            }
        }
        for (int i = 1; i < m; i++) {
            value[i] += value[i - 1];
        }
        //now we got the overall dir of all index just add it to their ascii value;
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<m;i++){
            int ascii=(s.charAt(i)-'a');
            sb.append((char)((ascii + value[i] +260000) % 26 + 'a'));
        }
        return sb.toString();
    }
}
//***************************************************************(brute force)*************************************************
class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        if(s==null || s.length()==0) return "";
        int n=shifts.length; // length of query;
        int m=s.length(); // length of string

        int[] value=new int[m]; // declaring int to know the overall dir of an element;
        for(int i=0;i<n ;i++){
            int stp=shifts[i][0];
            int edp=shifts[i][1];
            int dir=shifts[i][2];
            for(int j=stp ; j<=edp ;j++){
                if(dir==0){
                    //backward shift -1 for all index;
                    value[j]-=1;
                }
                else if(dir==1) value[j]+=1; //forward shift +1;
            }
        }
        //now we got the overall dir of all index just add it to their ascii value;
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<m;i++){
            int ascii=(s.charAt(i)-'a');
            sb.append((char)((ascii + value[i] +260000) % 26 + 'a'));
        }
        return sb.toString();
    }
}
